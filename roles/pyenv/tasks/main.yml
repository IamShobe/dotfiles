- name: Clone pyenv
  git:
    repo: "https://github.com/pyenv/pyenv.git"
    dest: "{{ pyenv_path }}"
    version: master

- name: Install .pyenvrc
  template:
    src: ".pyenvrc.j2"
    dest: "{{ pyenv_path }}/.pyenvrc"
    owner: "{{ user }}"
    mode: "0644"

- name: "Load pyenv env variables in {{ zsh_path_binding_path }}"
  lineinfile:
    dest: "{{ zsh_path_binding_path }}"
    regexp: '\.pyenvrc$'
    line: "[ -f {{ pyenv_path }}/.pyenvrc ] && source {{ pyenv_path }}/.pyenvrc"
    state: present
    create: yes

- name: Install Python interpreters "{{ pyenv_python_versions }}"
  shell: ". {{ pyenv_path }}/.pyenvrc && pyenv install {{ item }}"
  environment:
    PYTHON_CONFIGURE_OPTS: "{{ pyenv_python_configure_opts }}"
  args:
    creates: "{{ pyenv_path }}/versions/{{ item }}/bin/python"
  with_items: "{{ pyenv_python_versions }}"

- name: Get active pipx path
  block:
    - name: Get active pipx path
      shell:
        cmd: "which pipx"
      register: pipx_default_output
    - name: Print current / active pipx path
      ansible.builtin.debug:
        msg: "{{ pipx_default_output.stdout_lines[0] }}"
    - name: Set active_pipx_path as fact
      ansible.builtin.set_fact:
        active_pipx_path: "{{ pipx_default_output.stdout_lines[0] }}"

- name: "Install pipx packages"
  community.general.pipx:
    executable: "{{ active_pipx_path }}"
    name: "{{ item }}"
  with_items: "{{ pipx_packages }}"
