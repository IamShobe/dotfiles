#!/bin/zsh
# Set up the prompt
#autoload -Uz promptinit
#promptinit
#prompt adam1

# current file directory
#_custom_zsh_config_base="${${(%):-%x}:A:h}"
#


setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

ZSH_CACHE="/tmp/.zsh-${USER}-${ZSH_VERSION}"
mkdir -p $ZSH_CACHE
chmod 700 $ZSH_CACHE


export ZSH_DIR="${HOME}/.zshrc.d/"

# Keep 10000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history

# change default ls colors
if command -v dircolors &> /dev/null
then
    eval `dircolors -b ${HOME}/.zshrc.d/ls_colors`
else
    export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
fi



# history search
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search


# include all files
for file (${ZSH_DIR}/*.zsh(N)); do
	source $file
done

source $ZSH_DIR/plugins/zsh-autosuggestions.zsh
bindkey '^ ' autosuggest-accept

source $ZSH_DIR/plugins/per_directory_history.zsh

# source ~/.zshrc.d/plugins/zsh-syntax-highlighting.zsh
umask 022

[ -f ${HOME}/.aliases ] && source ${HOME}/.aliases

_TITLE ()
{
    local PRE= NAME="$1" LENGTH="$2";
    [[ "$NAME" != "${NAME#$HOME/}" || -z "${NAME#$HOME}" ]] &&
        PRE+='~' NAME="${NAME#$HOME}" LENGTH=$[LENGTH-1];
    ((${#NAME}>$LENGTH)) && NAME="/...${NAME:$[${#NAME}-LENGTH+4]}";
    echo "$PRE$NAME"
}

precmd () { 
    if [ -n "$TITLE" ]; then
        print -Pn "\e]0;$TITLE\a" 
    else
        print -Pn "\e]0;$(_TITLE "$PWD" 20)\a"
    fi
}
preexec () {
    print -Pn "\e]0;$2\a"
}
title() { export TITLE="$*" }

if [ -n "$SSH_CLIENT" ]; then
    export DISPLAY=`echo $SSH_CLIENT | cut -d" " -f1`:0
fi

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then 
	eval "$(pyenv init -)"
    if pyenv commands | grep virtualenvwrapper 1>/dev/null 2>&1; then
        pyenv virtualenvwrapper
    fi
fi
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.
if [ -s "$NVM_DIR/nvm.sh" ] && [ ! "$(type -w __init_nvm | cut -f2 -d' ')" = function ]; then
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
  declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack')
  function __init_nvm() {
    for i in "${__node_commands[@]}"; do unalias $i; done
    . "$NVM_DIR"/nvm.sh
    unset __node_commands
    unset -f __init_nvm
  }
  for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi
typeset -U PATH path
export EDITOR=vim
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--multi --bind tab:down,btab:up,alt-s:toggle-down,alt-d:toggle-up --height 40% --layout=reverse --cycle --extended"
